<?xml version="1.0"?>

<robot name="tug_gazebo"
	xmlns:xacro="http://ros.org/wiki/xacro">

	<xacro:arg name="robot_name" default="tug_X"/>

	<xacro:macro name="tug_gazebo" params="robot_name">

		<xacro:property name="base_length" value="0.6"/>
		<xacro:property name="base_width" value="0.45"/>
		<xacro:property name="base_height" value="0.18"/>
		<xacro:property name="wheel_radius" value="0.08"/>
		<xacro:property name="wheel_width" value="0.04"/>
		<xacro:property name="wheel_gap_from_base" value="0.01"/>
		<xacro:property name="wheel_separation" value="${base_width/2 + wheel_width/2 + wheel_gap_from_base}"/>

		<gazebo reference="${robot_name}/left_wheel">
			<mu1>1.0</mu1>
			<mu2>1.0</mu2>
			<kp>1000000.0</kp>
			<kd>100.0</kd>
			<minDepth>0.001</minDepth>
			<maxVel>1.0</maxVel>
		</gazebo>

		<gazebo reference="${robot_name}/right_wheel">
			<mu1>1.0</mu1>
			<mu2>1.0</mu2>
			<kp>1000000.0</kp>
			<kd>100.0</kd>
			<minDepth>0.001</minDepth>
			<maxVel>1.0</maxVel>
		</gazebo>

		<gazebo reference="${robot_name}/caster_link_back">
			<mu1>0.0</mu1>
			<mu2>0.0</mu2>
			<kp>1000000.0</kp>
			<kd>100.0</kd>
			<minDepth>0.001</minDepth>
			<maxVel>1.0</maxVel>
		</gazebo>

		<gazebo reference="${robot_name}/caster_link_front">
			<mu1>0.0</mu1>
			<mu2>0.0</mu2>
			<kp>1000000.0</kp>
			<kd>100.0</kd>
			<minDepth>0.001</minDepth>
			<maxVel>1.0</maxVel>
		</gazebo>

		<gazebo>
			<plugin name='${robot_name}_diff_drive_gazebo_plugin' filename='libgazebo_ros_diff_drive.so'>
				<ros>
					<namespace>${robot_name}</namespace>
				</ros>

				<!-- wheels -->
				<left_joint>${robot_name}/joint_left_wheel</left_joint>
				<right_joint>${robot_name}/joint_right_wheel</right_joint>

				<!-- kinematics -->
				<wheel_separation>${wheel_separation}</wheel_separation>
				<wheel_diameter>${2*wheel_radius}</wheel_diameter>

				<!-- limits -->
				<max_wheel_torque>20</max_wheel_torque>
				<max_wheel_acceleration>1.0</max_wheel_acceleration>

				<!-- output -->
				<publish_odom>true</publish_odom>
				<publish_odom_tf>true</publish_odom_tf>
				<publish_wheel_tf>true</publish_wheel_tf>

				<odometry_frame>world</odometry_frame>
				<robot_base_frame>${robot_name}/robot</robot_base_frame>
			</plugin>
		</gazebo>

		<gazebo reference="${robot_name}/imu">
			<gravity>true</gravity>
			<sensor name="${robot_name}_imu_sensor" type="imu">
				<always_on>true</always_on>
				<update_rate>100</update_rate>
				<visualize>false</visualize>
				<plugin name="${robot_name}_imu_gazebo_plugin" filename="libgazebo_ros_imu_sensor.so">
					<ros>
						<namespace>${robot_name}</namespace>
						<remapping>~/out:=imu</remapping>
					</ros>
					<bodyName>${robot_name}/imu</bodyName>
					<updateRateHZ>10.0</updateRateHZ>
					<xyzOffset>0 0 0</xyzOffset>
					<rpyOffset>0 0 0</rpyOffset>
					<frameName>${robot_name}/imu</frameName>
					<initialOrientationAsReference>false</initialOrientationAsReference>
				</plugin>
				<pose>0 0 0 0 0 0</pose>
			</sensor>
		</gazebo>

		<gazebo reference="${robot_name}/lidar">
			<sensor name="${robot_name}_lidar" type="ray">
				<always_on>true</always_on>
				<update_rate>10</update_rate>				<!-- scan frequency in Hz -->
				<visualize>true</visualize>

				<!-- Laser ray configuration -->
				<ray>
					<scan>
						<horizontal>
							<samples>36</samples>							<!-- number of points per scan (low precision) -->
							<resolution>1</resolution>
							<min_angle>-1.57</min_angle>							<!-- -90 degrees -->
							<max_angle>1.57</max_angle>							<!-- 90 degrees -->
						</horizontal>
					</scan>
					<range>
						<min>0.1</min>
						<max>10.0</max>
						<resolution>0.01</resolution>
					</range>
					<!-- Low-precision Gaussian noise -->
					<noise type="gaussian">
						<mean>0.0</mean>
						<stddev>0.05</stddev>
					</noise>
				</ray>

				<plugin name="${robot_name}_lidar_gazebo_plugin" filename="libgazebo_ros_ray_sensor.so">
					<ros>
						<namespace>${robot_name}</namespace>
						<remapping>~/out:=lidar/points</remapping>
					</ros>
					<output_type>sensor_msgs/PointCloud2</output_type>
					<min_intensity>100.0</min_intensity>
					<frame_name>${robot_name}/lidar</frame_name>
				</plugin>

				<pose>0 0 0 0 0 0</pose>				<!-- adjust height above base_link -->
			</sensor>
		</gazebo>

	</xacro:macro>
</robot>